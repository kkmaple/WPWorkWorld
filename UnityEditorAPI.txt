
编辑器相关
	Bool选择
	EditorGUILayout.Toggle 
	提示
	EditorGUILayout.HelpBox 
	启用编辑 
	EditorGUI.BeginDisabledGroup EditorGUI.EndDisabledGroup();
	
	新建一2D图
	GUIContent(Texture image);
	
	选择框：
	GUILayout.Toolbar(int selected, GUIContent[] content, params GUILayoutOption[] options); 
	
	横向添加背景色：
		private static Texture2D selectedBoxColour = new Texture2D(1, 1);
		GUIStyle selectedBox = new GUIStyle();
			
			selectedBoxColour.SetPixel(0, 0, Color.red);
			selectedBoxColour.Apply();
			selectedBox.normal.background = selectedBoxColour;

			EditorGUILayout.BeginHorizontal( selectedBox );

			GUILayout.XXXX;

			EditorGUILayout.EndHorizontal();
			
	添加背景方框
	EditorGUILayout.BeginVertical("Box"); EditorGUILayout.EndVertical();
	
	一个符号 + 注释
	GUILayout.Button(new GUIContent("+", "Click to add"), EditorStyles.toolbarButton)
	
	Unity 自带绘制组件图形： 可以是GameObject
	EditorGUIUtility.ObjectContent(null,typeof(Transform)).image)
	
	设置 key 与 value 之间，key的显示长度
	EditorGUIUtility.labelWidth = xxx;
	
	画图标，图标位置：Assets/Gizmos
	Gizmos.DrawIcon(transform.position, "图片名");
	 
	方法上添加 方法会每帧运行 表示未选择的时候   方法中可以使用Gizmos 相关的API
	[DrawGizmo(GizmoType.NotSelected)]
	
	缩进，数值越大，缩进越前
	EditorGUI.indentLevel = x;
	
	设置 Key 与 Value 之间的距离 
	EditorGUIUtility.labelWidth
	
	当编辑器改变时，此参数的作用域只有一个方法内。
	if (GUI.changed)
         EditorUtility.SetDirty(curLevel);
        
	自定义编辑器，同时多选编辑器也可以编辑
	[CanEditMultipleObjects]
	
	注意事项：坐标 旋转 等Vector每帧都赋值，保存场景将会受到麻烦，而且像按钮等的一些提示弹出也会变得古怪。
	
	
图形渲染相关
	(Texture2D)AssetDatabase.LoadAssetAtPath("Path + .Png", typeof(Texture2D));